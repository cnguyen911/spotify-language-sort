{"ast":null,"code":"var _jsxFileName = \"/Users/chrisnguyen/spotify-projectFinal/client/src/components/LanguageEditor.js\";\nimport React, { useState } from 'react';\nimport './LanguageEditor.css';\nconst commonLanguages = ['English', 'Spanish', 'French', 'German', 'Italian', 'Portuguese', 'Japanese', 'Korean', 'Chinese', 'Vietnamese', 'Russian', 'Arabic', 'Hindi', 'Thai', 'Dutch', 'Swedish', 'Norwegian', 'Danish', 'Finnish', 'Polish', 'Czech', 'Hungarian', 'Romanian', 'Turkish', 'Greek', 'Ukrainian', 'Bulgarian', 'Traditional Chinese', 'Bengali', 'Tamil', 'Telugu', 'Kannada', 'Malayalam', 'Filipino', 'Indonesian'];\nfunction LanguageEditor({\n  tracksByLanguage,\n  onSave,\n  onCancel\n}) {\n  const [editedTracks, setEditedTracks] = useState(() => {\n    const tracks = {};\n    Object.entries(tracksByLanguage).forEach(([language, languageTracks]) => {\n      languageTracks.forEach(track => {\n        tracks[track.id] = {\n          ...track,\n          language\n        };\n      });\n    });\n    return tracks;\n  });\n  console.log(\"Tracks by language received:\", tracksByLanguage);\n  console.log(\"Initialized edited tracks:\", editedTracks);\n  const handleLanguageChange = (trackId, newLanguage) => {\n    setEditedTracks(prev => ({\n      ...prev,\n      [trackId]: {\n        ...prev[trackId],\n        language: newLanguage\n      }\n    }));\n  };\n  const handleSave = () => {\n    const newTracksByLanguage = {};\n    Object.values(editedTracks).forEach(track => {\n      if (!newTracksByLanguage[track.language]) {\n        newTracksByLanguage[track.language] = [];\n      }\n      newTracksByLanguage[track.language].push(track);\n    });\n    onSave(newTracksByLanguage);\n  };\n  const allTracks = Object.values(editedTracks);\n  const sortedLanguages = [...commonLanguages].sort((a, b) => {\n    if (a === 'Unknown') return 1;\n    if (b === 'Unknown') return -1;\n    if (a === 'Other') return 1;\n    if (b === 'Other') return -1;\n    return a.localeCompare(b);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"language-editor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Edit Language Classifications\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Review and correct language classifications for better playlist sorting.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"track-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, allTracks.map(track => /*#__PURE__*/React.createElement(\"div\", {\n    key: track.id,\n    className: \"track-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"track-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"track-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, track.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"track-artists\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, track.artists.map(artist => artist.name).join(', '))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"track-language\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: track.language,\n    onChange: e => handleLanguageChange(track.id, e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, sortedLanguages.map(lang => /*#__PURE__*/React.createElement(\"option\", {\n    key: lang,\n    value: lang,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  }, lang)), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Unknown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, \"Unknown\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Other\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"Other\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"editor-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"cancel-button\",\n    onClick: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"save-button\",\n    onClick: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"Save Changes\")));\n}\nexport default LanguageEditor;","map":{"version":3,"names":["React","useState","commonLanguages","LanguageEditor","tracksByLanguage","onSave","onCancel","editedTracks","setEditedTracks","tracks","Object","entries","forEach","language","languageTracks","track","id","console","log","handleLanguageChange","trackId","newLanguage","prev","handleSave","newTracksByLanguage","values","push","allTracks","sortedLanguages","sort","a","b","localeCompare","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","key","name","artists","artist","join","value","onChange","e","target","lang","onClick"],"sources":["/Users/chrisnguyen/spotify-projectFinal/client/src/components/LanguageEditor.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './LanguageEditor.css';\n\nconst commonLanguages = [\n  'English', 'Spanish', 'French', 'German', 'Italian', 'Portuguese',\n  'Japanese', 'Korean', 'Chinese', 'Vietnamese', 'Russian', 'Arabic', 'Hindi',\n  'Thai', 'Dutch', 'Swedish', 'Norwegian', 'Danish', 'Finnish', 'Polish',\n  'Czech', 'Hungarian', 'Romanian', 'Turkish', 'Greek', 'Ukrainian',\n  'Bulgarian', 'Traditional Chinese', 'Bengali', 'Tamil', 'Telugu', 'Kannada',\n  'Malayalam', 'Filipino', 'Indonesian'\n];\n\nfunction LanguageEditor({ tracksByLanguage, onSave, onCancel }) {\n  const [editedTracks, setEditedTracks] = useState(() => {\n    const tracks = {};\n    \n    Object.entries(tracksByLanguage).forEach(([language, languageTracks]) => {\n      languageTracks.forEach(track => {\n        tracks[track.id] = {\n          ...track,\n          language\n        };\n      });\n    });\n    \n    return tracks;\n  });\n\n  console.log(\"Tracks by language received:\", tracksByLanguage);\n  console.log(\"Initialized edited tracks:\", editedTracks);\n\n  const handleLanguageChange = (trackId, newLanguage) => {\n    setEditedTracks(prev => ({\n      ...prev,\n      [trackId]: {\n        ...prev[trackId],\n        language: newLanguage\n      }\n    }));\n  };\n\n  const handleSave = () => {\n    const newTracksByLanguage = {};\n    \n    Object.values(editedTracks).forEach(track => {\n      if (!newTracksByLanguage[track.language]) {\n        newTracksByLanguage[track.language] = [];\n      }\n      newTracksByLanguage[track.language].push(track);\n    });\n    \n    onSave(newTracksByLanguage);\n  };\n\n  const allTracks = Object.values(editedTracks);\n\n  const sortedLanguages = [...commonLanguages].sort((a, b) => {\n    if (a === 'Unknown') return 1;\n    if (b === 'Unknown') return -1;\n    if (a === 'Other') return 1;\n    if (b === 'Other') return -1;\n    return a.localeCompare(b);\n  });\n\n  return (\n    <div className=\"language-editor\">\n      <h3>Edit Language Classifications</h3>\n      <p>Review and correct language classifications for better playlist sorting.</p>\n      \n      <div className=\"track-list\">\n        {allTracks.map(track => (\n          <div key={track.id} className=\"track-item\">\n            <div className=\"track-info\">\n              <div className=\"track-name\">{track.name}</div>\n              <div className=\"track-artists\">\n                {track.artists.map(artist => artist.name).join(', ')}\n              </div>\n            </div>\n            \n            <div className=\"track-language\">\n              <select \n                value={track.language}\n                onChange={(e) => handleLanguageChange(track.id, e.target.value)}\n              >\n                {sortedLanguages.map(lang => (\n                  <option key={lang} value={lang}>{lang}</option>\n                ))}\n                <option value=\"Unknown\">Unknown</option>\n                <option value=\"Other\">Other</option>\n              </select>\n            </div>\n          </div>\n        ))}\n      </div>\n      \n      <div className=\"editor-actions\">\n        <button className=\"cancel-button\" onClick={onCancel}>Cancel</button>\n        <button className=\"save-button\" onClick={handleSave}>Save Changes</button>\n      </div>\n    </div>\n  );\n}\n\nexport default LanguageEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}